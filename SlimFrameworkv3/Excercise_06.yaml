openapi: 3.0.0

info:
  title: REST API for accessing the classicmodels database
  description: This REST API was created by Ragnar Storstr√∏m as a demo on how to write a REST API using the Slim framework
  version: 0.0.1
  
servers:
  - url: http://demorestapi.localhost/DemoRESTAPI
    description: REST API server in my internal lab

components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic

paths:
  /:
    get:
      summary: Returns information about which REST API you have accessed
      description: This is a test endpoint designed to prove you can access the demo REST API
      tags:
        - REST API
      responses:
        '200':
          description: A text describing the REST API is returned
          content:
            application/text:
              schema: 
                type: string
                example:
                  This is the REST API that allows REST access to a database server

  /v1/Customers:
    get:
      summary: Returns all records in the customers table in the database
      description: This endpoint takes an object DN as a parameter and returns a database ID
      tags:
        - Customers
      responses:
        '200':
          description: The customer number and names from the customer database is returned
          content:
            application/json:
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    customerNumber:
                      type: integer
                    customerName:
                      type: string
                example:
                  customerNumber: 103
                  customerName: Atelier graphique
                      
  /v1/Customer/{CustomerNumber}:
    get:
      summary: Returns the customer name in the database for the supplied customer number
      description: This endpoint takes a customer number as a parameter and returns a customer name
      tags:
        - Customer
      parameters:
        - in: path
          name: CustomerNumber
          schema:
            type: integer
          required: true
          description: Customer number to get the name of
          example:
            customerNumber: 103
      responses:
        '200':
          description: The customer name for the supplied customer number is returned
          content:
            application/json:
              schema: 
                type: string
                example:
                  customerName: Atelier graphique
        '204':
          description: No customer was found in the database with this customer number
          content:
            application/json:
              schema: 
                type: string
                example:
                  No customer with number xxx could be found!
        '500':
          description: A database error occured
          content:
            application/json:
              schema: 
                type: string                    
                example:
                  ERROR: Select returned error xxx!

  /v1/Customer/:
    post:
      summary: Creates the supplied customer in the database
      description: This endpoint takes customer information as a parameters
      security:
        - basicAuth: []
      tags:
        - Customer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                customerNumber:
                  type: integer
                customerName:
                  type: string
                contactLastName:
                  type: string
                contactFirstName:
                  type: string
                phone:
                  type: string
                addressLine1:
                  type: string
                addressLine2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postalCode:
                  type: string
                country:
                  type: string
                salesRepEmployeeNumber:
                  type: integer
                creditLimit:
                  type: integer
            example:
              customerName: Knick knacks by Geoffrey
              contactLastName: Carman
              contactFirstName: Geoffrey
              phone: +1 555 534 7928
              addressLine1: Bidirectional Lane 5
              addressLine2: There's no line here
              city: IDMVille
              state: Hawaii
              postalCode: 4632643
              country: USA
              salesRepEmployeeNumber: 1702
              creditLimit: 1000000          
      responses:
        '201':
          description: Object created
        '400':
          description: Insert returned error xxx!
          content:
            application/json:
              schema: 
                type: string
                example:
                  ERROR: Insert returned error xxx!
        '406':
          description: Mandatory parameter missing
          content:
            application/json:
              schema: 
                type: string
                example:
                  ERROR: Mandatory parameter missing